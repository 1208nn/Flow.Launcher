<Window
    x:Class="Flow.Launcher.MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Flow.Launcher.Converters"
    xmlns:flowlauncher="clr-namespace:Flow.Launcher"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
    xmlns:vm="clr-namespace:Flow.Launcher.ViewModel"
    Name="FlowMainWindow"
    Title="Flow Launcher"
    x:DataType="vm:MainViewModel"
    MinWidth="{Binding MainWindowWidth, Mode=OneWay}"
    MaxWidth="{Binding MainWindowWidth, Mode=OneWay}"
    Background="Transparent"
    Deactivated="OnDeactivated"
    Initialized="OnInitialized"
    Loaded="OnLoaded"
    Opacity="{Binding MainWindowOpacity, Mode=OneWay}"
    ShowInTaskbar="False"
    SizeToContent="Height"
    Topmost="True"
    IsVisible="{Binding MainWindowVisibility, Mode=TwoWay}"
    WindowStartupLocation="CenterScreen"
    ExtendClientAreaChromeHints="NoChrome">
    <Window.Resources>
        <converters:QuerySuggestionBoxConverter x:Key="QuerySuggestionBoxConverter" />
        <converters:BorderClipConverter x:Key="BorderClipConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:SplitterConverter x:Key="SplitterConverter" />
        <converters:BoolToIMEConversionModeConverter x:Key="BoolToIMEConversionModeConverter" />
        <converters:BoolToIMEStateConverter x:Key="BoolToIMEStateConverter" />
        <converters:StringToKeyBindingConverter x:Key="StringToKeyBindingConverter" />
    </Window.Resources>

    <Window.KeyBindings>
        <KeyBinding Gesture="Escape" Command="{Binding EscCommand}" />
        <KeyBinding Gesture="F5" Command="{Binding ReloadPluginDataCommand}" />
        <KeyBinding Gesture="Tab" Command="{Binding AutocompleteQueryCommand}" />
        <KeyBinding
            Gesture="Shift+Tab"
            Command="{Binding AutocompleteQueryCommand}" />
        <KeyBinding
            Gesture="Ctrl+I"
            Command="{Binding OpenSettingCommand}" />
        <KeyBinding
            Gesture="Ctrl+N"
            Command="{Binding SelectNextItemCommand}" />
        <KeyBinding
            Gesture="Ctrl+J"
            Command="{Binding SelectNextItemCommand}" />
        <KeyBinding
            Gesture="Ctrl+D"
            Command="{Binding SelectNextPageCommand}" />
        <KeyBinding
            Gesture="Ctrl+P"
            Command="{Binding SelectPrevItemCommand}" />
        <KeyBinding
            Gesture="Ctrl+K"
            Command="{Binding SelectPrevItemCommand}" />
        <KeyBinding
            Gesture="Ctrl+U"
            Command="{Binding SelectPrevPageCommand}" />
        <KeyBinding
            Gesture="Alt+Home"
            Command="{Binding SelectFirstResultCommand}" />
        <KeyBinding
            Gesture="Ctrl+O"
            Command="{Binding LoadContextMenuCommand}" />
        <KeyBinding
            Gesture="Ctrl+R"
            Command="{Binding ReQueryCommand}" />
        <KeyBinding
            Gesture="Ctrl+H"
            Command="{Binding LoadHistoryCommand}" />
        <KeyBinding
            Gesture="Ctrl+OemCloseBrackets"
            Command="{Binding IncreaseWidthCommand}" />
        <KeyBinding
            Gesture="Ctrl+OemOpenBrackets"
            Command="{Binding DecreaseWidthCommand}" />
        <KeyBinding
            Gesture="Ctrl+OemPlus"
            Command="{Binding IncreaseMaxResultCommand}" />
        <KeyBinding
            Gesture="Ctrl+OemMinus"
            Command="{Binding DecreaseMaxResultCommand}" />
        <KeyBinding
            Gesture="Ctrl+H"
            Command="{Binding LoadHistoryCommand}" />
        <KeyBinding
            Gesture="Ctrl+Shift+Enter"
            Command="{Binding OpenResultCommand}" />
        <KeyBinding
            Gesture="Shift+Enter"
            Command="{Binding LoadContextMenuCommand}" />
        <KeyBinding Gesture="Enter" Command="{Binding OpenResultCommand}" />
        <KeyBinding
            Gesture="Ctrl+Enter"
            Command="{Binding OpenResultCommand}" />
        <KeyBinding
            Gesture="Alt+Enter"
            Command="{Binding OpenResultCommand}" />
        <KeyBinding
            Gesture="{Binding D1Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="0" />
        <KeyBinding
            Gesture="{Binding D2Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="1" />
        <KeyBinding
            Gesture="{Binding D3Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="2" />
        <KeyBinding
            Gesture="{Binding D4Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="3" />
        <KeyBinding
            Gesture="{Binding D5Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="4" />
        <KeyBinding
            Gesture="{Binding D6Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="5" />
        <KeyBinding
            Gesture="{Binding D7Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="6" />
        <KeyBinding
            Gesture="{Binding D8Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="7" />
        <KeyBinding
            Gesture="{Binding D9Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="8" />
        <KeyBinding
            Gesture="{Binding D0Gesture}"
            Command="{Binding OpenResultCommand}"
            CommandParameter="9" />
        <KeyBinding
            Gesture="Ctrl+F12"
            Command="{Binding ToggleGameModeCommand}" />
        <KeyBinding
            Gesture="{Binding PreviewHotkey}"
            Command="{Binding TogglePreviewCommand}" />
    </Window.KeyBindings>
    <Grid>
        <Border PointerPressed="OnMouseDown">
            <StackPanel Orientation="Vertical">
                <Grid>
                    <Border>
                        <Grid>
                            <TextBox
                                x:Name="QueryTextSuggestionBox"
                                IsEnabled="False">
                                <TextBox.Text>
                                    <!-- <MultiBinding Converter="{StaticResource QuerySuggestionBoxConverter}"> -->
                                    <!--     <Binding ElementName="QueryTextBox" Mode="OneTime" /> -->
                                    <!--     <Binding ElementName="QueryTextBox" Path="Text" /> -->
                                    <!-- </MultiBinding> -->
                                </TextBox.Text>
                            </TextBox>
                            <TextBox
                                x:Name="QueryTextBox"
                                Height="40"
                                Text="{Binding QueryText, Mode=TwoWay}">
                                <!-- <TextBox.CommandBindings> -->
                                <!--     <CommandBinding Command="ApplicationCommands.Copy" Executed="OnCopy" /> -->
                                <!--     <CommandBinding Command="ApplicationCommands.Paste" Executed="OnPaste" /> -->
                                <!-- </TextBox.CommandBindings> -->
                                <TextBox.ContextMenu>
                                    <ContextMenu MinWidth="160">
                                        <!-- <MenuItem Command="ApplicationCommands.Cut" Header="{DynamicResource cut}"> -->
                                        <!--     <MenuItem.Icon> -->
                                        <!--         <TextBlock Text="&#xe8c6;" /> -->
                                        <!--     </MenuItem.Icon> -->
                                        <!-- </MenuItem> -->
                                        <!-- <MenuItem Command="ApplicationCommands.Copy" Header="{DynamicResource copy}"> -->
                                        <!--     <MenuItem.Icon> -->
                                        <!--         <ui:FontIcon Glyph="&#xe8c8;" /> -->
                                        <!--     </MenuItem.Icon> -->
                                        <!-- </MenuItem> -->
                                        <!-- <MenuItem Command="ApplicationCommands.Paste" Header="{DynamicResource paste}"> -->
                                        <!--     <MenuItem.Icon> -->
                                        <!--         <ui:FontIcon Glyph="&#xe77f;" /> -->
                                        <!--     </MenuItem.Icon> -->
                                        <!-- </MenuItem> -->
                                        <Separator
                                            Margin="0"
                                            Padding="0,4,0,4"
                                            Background="{DynamicResource ContextSeparator}" />
                                        <MenuItem Click="OnContextMenusForSettingsClick"
                                                  Header="{DynamicResource flowlauncher_settings}">
                                            <MenuItem.Icon>
                                                <TextBlock Text="&#xe713;" FontFamily="{StaticResource IconFont}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="{Binding EscCommand}" Header="{DynamicResource closeWindow}">
                                            <MenuItem.Icon>
                                                <TextBlock Text="&#xe711;" FontFamily="{StaticResource IconFont}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </TextBox.ContextMenu>
                            </TextBox>
                        </Grid>
                    </Border>

                    <StackPanel
                        x:Name="ClockPanel"
                        IsHitTestVisible="False"
                        HorizontalAlignment="Right">
                        <TextBlock
                            x:Name="ClockBox"
                            Text="{Binding ClockText}"
                            IsVisible="{Binding Settings.UseClock}" />
                        <TextBlock
                            x:Name="DateBox"
                            Text="{Binding DateText}"
                            IsVisible="{Binding Settings.UseDate}" />
                    </StackPanel>
                    <Border>
                        <Grid>
                            <Image
                                x:Name="PluginActivationIcon"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Source="{Binding PluginIconPath}"
                                Stretch="Uniform" />
                            <Canvas>
                                <Path
                                    Name="SearchIcon"
                                    Margin="0"
                                    Data="{DynamicResource SearchIconImg}"
                                    Stretch="Fill"
                                    IsVisible="{Binding SearchIconVisibility}" />
                            </Canvas>
                        </Grid>
                    </Border>
                    <!-- <Line -->
                    <!--     x:Name="ProgressBar" -->
                    <!--     Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth}" -->
                    <!--     Height="2" -->
                    <!--     Margin="12,0,12,0" -->
                    <!--     HorizontalAlignment="Center" -->
                    <!--     VerticalAlignment="Bottom" -->
                    <!--     StrokeThickness="2" -->
                    <!--     IsVisible="{Binding ProgressBarVisibility, Mode=TwoWay}" -->
                    <!--     X1="-100" -->
                    <!--     X2="0" -->
                    <!--     Y1="0" -->
                    <!--     Y2="0" /> -->
                </Grid>

                <Grid ClipToBounds="True">
                    <ContentControl>
                        <!-- <ContentControl.Style> -->
                        <!--     <Style TargetType="ContentControl"> -->
                        <!--         <Setter Property="Visibility" Value="Collapsed" /> -->
                        <!--         <Style.Triggers> -->
                        <!--             <DataTrigger Binding="{Binding ElementName=ResultListBox, Path=Visibility}" -->
                        <!--                          Value="Visible"> -->
                        <!--                 <Setter Property="Visibility" Value="Visible" /> -->
                        <!--             </DataTrigger> -->
                        <!--             <DataTrigger Binding="{Binding ElementName=ContextMenu, Path=Visibility}" -->
                        <!--                          Value="Visible"> -->
                        <!--                 <Setter Property="Visibility" Value="Visible" /> -->
                        <!--             </DataTrigger> -->
                        <!--             <DataTrigger Binding="{Binding ElementName=History, Path=Visibility}" -->
                        <!--                          Value="Visible"> -->
                        <!--                 <Setter Property="Visibility" Value="Visible" /> -->
                        <!--             </DataTrigger> -->
                        <!--         </Style.Triggers> -->
                        <!--     </Style> -->
                        <!-- </ContentControl.Style> -->
                        <Rectangle
                            x:Name="MiddleSeparator"
                            HorizontalAlignment="Stretch" />
                    </ContentControl>

                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="100" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="0.85*" MinWidth="244" />
                    </Grid.ColumnDefinitions>
                    <StackPanel
                        x:Name="ResultArea"
                        Grid.Column="0"
                        Grid.ColumnSpan="{Binding ResultAreaColumn}">
                        <Border DataContext="{Binding ResultsVM}">
                            <!-- <Border.Clip> -->
                            <!-- <MultiBinding Converter="{StaticResource BorderClipConverter}"> -->
                            <!-- <Binding Path="Width" RelativeSource="{RelativeSource Self}" /> -->
                            <!-- <Binding Path="Height" RelativeSource="{RelativeSource Self}" /> -->
                            <!-- <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}" /> -->
                            <!-- </MultiBinding> -->
                            <!-- </Border.Clip> -->
                            <flowlauncher:ResultListBox x:Name="ResultListBox" />
                        </Border>
                        <Border DataContext="{Binding ContextMenu}">
                            <Border.Clip>
                                <!-- <MultiBinding Converter="{StaticResource BorderClipConverter}"> -->
                                <!--     <Binding Path="Width" RelativeSource="{RelativeSource Self}" /> -->
                                <!--     <Binding Path="Height" RelativeSource="{RelativeSource Self}" /> -->
                                <!--     <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}" /> -->
                                <!-- </MultiBinding> -->
                            </Border.Clip>
                            <flowlauncher:ResultListBox
                                x:Name="ContextMenu" />
                        </Border>
                        <Border DataContext="{Binding History}">
                            <Border.Clip>
                                <!-- <MultiBinding Converter="{StaticResource BorderClipConverter}"> -->
                                <!--     <Binding Path="Width" RelativeSource="{RelativeSource Self}" /> -->
                                <!--     <Binding Path="Height" RelativeSource="{RelativeSource Self}" /> -->
                                <!--     <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}" /> -->
                                <!-- </MultiBinding> -->
                            </Border.Clip>
                            <flowlauncher:ResultListBox
                                x:Name="History" />
                        </Border>
                    </StackPanel>
                    <!-- <GridSplitter -->
                    <!--     Grid.Column="1" -->
                    <!--     HorizontalAlignment="Center" -->
                    <!--     VerticalAlignment="Stretch" -->
                    <!--     Background="Transparent" -->
                    <!--     ShowsPreview="True" /> -->
                    <!-- <Grid -->
                    <!--     x:Name="Preview" -->
                    <!--     Grid.Column="2" -->
                    <!--     VerticalAlignment="Stretch" -->
                    <!--     IsVisible="{Binding PreviewVisible}"> -->
                    <!--     <Border -->
                    <!--         x:DataType="vm:ResultViewModel" -->
                    <!--         IsVisible="{Binding ShowDefaultPreview}"> -->
                    <!--         <Grid -->
                    <!--             Margin="20,0,10,0" -->
                    <!--             VerticalAlignment="Stretch" -->
                    <!--             Background="Transparent"> -->
                    <!--             <Grid.RowDefinitions> -->
                    <!--                 <RowDefinition Height="*" /> -->
                    <!--                 <RowDefinition Height="Auto" /> -->
                    <!--             </Grid.RowDefinitions> -->
                    <!--             <Grid Grid.Row="0" VerticalAlignment="Center"> -->
                    <!--                 <Grid.RowDefinitions> -->
                    <!--                     <RowDefinition Height="Auto" /> -->
                    <!--                     <RowDefinition Height="Auto" /> -->
                    <!--                 </Grid.RowDefinitions> -->
                    <!--                 <TextBlock -->
                    <!--                     x:Name="PreviewGlyphIcon" -->
                    <!--                     Grid.Row="0" -->
                    <!--                     Margin="0,16,0,0" -->
                    <!--                     FontFamily="{Binding Glyph.FontFamily}" -->
                    <!--                     Text="{Binding Glyph.Glyph}" -->
                    <!--                     IsVisible="{Binding ShowGlyph}" /> -->
                    <!--                 <Image -->
                    <!--                     x:Name="PreviewImageIcon" -->
                    <!--                     Grid.Row="0" -->
                    <!--                     MaxHeight="320" -->
                    <!--                     Margin="0,16,0,0" -->
                    <!--                     HorizontalAlignment="Center" -->
                    <!--                     Source="{Binding PreviewImage}" -->
                    <!--                     StretchDirection="DownOnly" -->
                    <!--                     IsVisible="{Binding ShowPreviewImage}"> -->
                    <!--                     ~1~ <Image.Style> @1@ -->
                    <!--                     ~1~     <Style TargetType="{x:Type Image}"> @1@ -->
                    <!--                     ~1~         <Setter Property="MaxWidth" Value="96" /> @1@ -->
                    <!--                     ~1~         <Style.Triggers> @1@ -->
                    <!--                     ~1~             <DataTrigger Binding="{Binding UseBigThumbnail}" Value="True"> @1@ -->
                    <!--                     ~1~                 <Setter Property="MaxWidth" @1@ -->
                    <!--                     ~1~                         Value="{Binding ElementName=Preview, Path=ActualWidth}" /> @1@ -->
                    <!--                     ~1~             </DataTrigger> @1@ -->
                    <!--                     ~1~         </Style.Triggers> @1@ -->
                    <!--                     ~1~     </Style> @1@ -->
                    <!--                     ~1~ </Image.Style> @1@ -->
                    <!--                 </Image> -->
                    <!--                 <TextBlock -->
                    <!--                     x:Name="PreviewTitle" -->
                    <!--                     Grid.Row="1" -->
                    <!--                     Margin="0,6,0,16" -->
                    <!--                     HorizontalAlignment="Stretch" -->
                    <!--                     Text="{Binding Result.Title}" -->
                    <!--                     TextAlignment="Center" -->
                    <!--                     TextWrapping="Wrap" /> -->
                    <!--             </Grid> -->
                    <!--             <StackPanel Grid.Row="1"> -->
                    <!--                 ~1~ <StackPanel.Style> @1@ -->
                    <!--                 ~1~     <Style TargetType="{x:Type StackPanel}"> @1@ -->
                    <!--                 ~1~         <Style.Triggers> @1@ -->
                    <!--                 ~1~             <DataTrigger @1@ -->
                    <!--                 ~1~                 Binding="{Binding ElementName=PreviewSubTitle, UpdateSourceTrigger=PropertyChanged, Path=Text.Length}" @1@ -->
                    <!--                 ~1~                 Value="0"> @1@ -->
                    <!--                 ~1~                 <Setter Property="Visibility" Value="Collapsed" /> @1@ -->
                    <!--                 ~1~             </DataTrigger> @1@ -->
                    <!--                 ~1~         </Style.Triggers> @1@ -->
                    <!--                 ~1~     </Style> @1@ -->
                    <!--                 ~1~ </StackPanel.Style> @1@ -->
                    <!--                 <Separator /> -->
                    <!--                 <TextBlock -->
                    <!--                     x:Name="PreviewSubTitle" -->
                    <!--                     Text="{Binding Result.SubTitle}" /> -->
                    <!--             </StackPanel> -->
                    <!--         </Grid> -->
                    <!--     </Border> -->
                    <!--     <Border -->
                    <!--         x:DataType="vm:ResultViewModel" -->
                    <!--         IsVisible="{Binding ShowCustomizedPreview}"> -->
                    <!--         <ContentControl Content="{Binding Result.PreviewPanel.Value}" /> -->
                    <!--     </Border> -->
                    <!-- </Grid> -->
                </Grid>
            </StackPanel>
        </Border>
    </Grid>
</Window>